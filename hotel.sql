DROP TABLE PROFILES;
DROP TABLE RESERVATIONS;
DROP TABLE ROOMS;
DROP TABLE PENDING_RESERVATIONS;
DROP TABLE INQUIRIES;
DROP TABLE INQUERIES;
CREATE USER admin_jack IDENTIFIED BY revature;

GRANT CONNECT, RESOURCE, DBA TO admin_jack;
GRANT CREATE SESSION GRANT ANY PRIVILEGE TO admin_jack;
GRANT UNLIMITED TABLESPACE TO admin_jack;
GRANT
  SELECT,
  INSERT,
  UPDATE,
  DELETE
ON
  schema.PROFILES;
TO
  admin_jack;

--DDL stements
CREATE TABLE PROFILES (
    userId VARCHAR2(20),
    firstname VARCHAR2(15),
    lastname VARCHAR2(20),
    pssword VARCHAR2(15),
    hst INTEGER CHECK(hst BETWEEN 0 AND 1),
    CONSTRAINT PK_userIdPro PRIMARY KEY (userId)
);
DROP TABLE RESERVATIONS;
CREATE TABLE RESERVATIONS (
    reservationDate DATE,
    userId VARCHAR(20),
    roomNumber INTEGER
);

CREATE TABLE ROOMS (
    roomNumber INTEGER,
    numBeds INTEGER CHECK(numBeds BETWEEN 1 AND 2),
    smoking INTEGER CHECK(smoking BETWEEN 0 AND 1)
);
<-- PENDING RESERVATIONS
DROP TABLE PENDING_RESERVATIONS;
CREATE TABLE PENDING_RESERVATIONS (
    transactionNumber INTEGER,
    userId VARCHAR(20),
    reservationDate DATE,
    roomNumber INTEGER,
    CONSTRAINT PK_transactionNumber PRIMARY KEY (transactionNumber)
);

DROP SEQUENCE SQ_TN_PK;
CREATE SEQUENCE SQ_TN_PK MINVALUE 1 START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER TR_INSERT_PENDRES
BEFORE INSERT ON PENDING_RESERVATIONS
FOR EACH ROW
BEGIN
    SELECT SQ_TN_PK.NEXTVAL INTO :NEW.transactionNumber FROM DUAL;
END;

<-- INQUIRIES TABLE STUFF
DROP TABLE INQUIRIES;
CREATE TABLE INQUIRIES (
    inqId INTEGER,
    active INTEGER,
    userId VARCHAR2(20),
    topic VARCHAR2(20),
    numMessages INTEGER,
    CONSTRAINT PK_idInq PRIMARY KEY (inqId)
);

DROP SEQUENCE SQ_INQ_PK;
CREATE SEQUENCE SQ_INQ_PK MINVALUE 1 START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER TR_INSERT_INQ
BEFORE INSERT ON INQUIRIES
FOR EACH ROW
BEGIN
    SELECT SQ_INQ_PK.NEXTVAL INTO :NEW.inqId FROM DUAL;
END;
/

SELECT * FROM INQUIRIES;
SELECT * FROM INQUIRIES WHERE active=1 AND USERID='dummy' AND TOPIC='dummy';
INSERT INTO INQUIRIES (active, userId, topic) VALUES (1, 'dummy', 'dummy');
DELETE * FROM INQUIRIES;

SELECT * FROM INQUIRY23;
<--END INQUIRY STUFF -->

CREATE SEQUENCE seq_transactionNumber MINVALUE 1 START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER transaction_on_insert
  BEFORE INSERT ON PENDING_RESERVATIONS
  FOR EACH ROW
BEGIN
  SELECT seq_transactionNumber.nextval
  INTO :new.id
  FROM dual;
END;

--DML statements
INSERT INTO PROFILES (userId, firstname, lastname, pssword, hst) VALUES ('JackTorrance', 'Jack', 'Torrance', 'overlook', 1);
INSERT INTO RESERVATIONS (reservationDate, userId, roomNumber) VALUES (TO_DATE('2018-08-30','YYYY-MM-DD'), (SELECT userId FROM PROFILES WHERE userId='JackTorrance'), 3); 
SELECT * FROM RESERVATIONS;
SELECT * FROM PROFILES;
SELECT COUNT(*) FROM PROFILES;
DROP TABLE INQUIRY6;

COMMIT;